apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven' //必加
group='com.github.weixlong' //必加，com.github.<用户名>(也就是你GtiHub上的地址)

android {
    compileSdkVersion 26


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.lzy.net:okgo:2.0.0'
    compile 'com.alibaba:fastjson:1.1.52.android'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile('com.facebook.fresco:fresco:0.14.1') {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude group: 'com.android.support'
        exclude group: 'com.nineoldandroids'
    }
//    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    androidTestCompile 'com.android.support:support-annotations:22.1.1'
    compile 'com.zxy.android:recovery:0.1.2'
    compile 'com.zxy.android:tiny:0.0.6'
    compile 'me.iwf.photopicker:PhotoPicker:0.9.5'
    compile 'com.yanzhenjie:permission:1.0.5'
    compile files('libs/afinal_0.5.1_bin.jar')
    compile 'com.makeramen:roundedimageview:2.3.0'
}

//---------------------------------------------下面的必加，加上下面的作用是在上传后会带上注释，不然会发现没有注释

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
//// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}
